{
  "name": "level-replicate",
  "description": "scuttlebutt style replication for level-*",
  "version": "1.1.6",
  "homepage": "https://github.com/dominictarr/level-replicate",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/level-replicate.git"
  },
  "dependencies": {
    "monotonic-timestamp": "0.0.8",
    "pull-stream-merge": "~1.0.4",
    "pull-stream": ">=2.20 <3",
    "pull-window": "~1.0.3",
    "stream-to-pull-stream": "~1.2.2",
    "pull-level": "~1.1.4",
    "pull-cat": "~1.1.4",
    "pull-stream-to-stream": "~1.2.5",
    "json-buffer": "~2.0.3",
    "stream-combiner": "0.0.2",
    "msgpack-stream": "0.0.11",
    "stream-serializer": "~1.1.1"
  },
  "devDependencies": {
    "level-sublevel": ">=5.0.1 <6",
    "random-name": "~0.1.0",
    "rimraf": "~2.1.4",
    "pull-crypto": "~1.0",
    "pull-zip": "1",
    "tape": "~1.0.4",
    "level-test": "~1.4.2",
    "continuable-para": "~1.0.0",
    "continuable-series": "~1.1.0",
    "shasum": "0.0.2",
    "observable": "~2.1.1"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# level-replicate\n\nmaster-master replication with levelup.\n\nImplements scuttlebutt style handshake and then syncs data, then replicates real time changes.\n\n## Example\n\nReplicate from a between two processes.\nOne process starts a server, and another connects.\n\n``` js\n//master1.js\nvar level   = require('level')\nvar SubLevel  = require('level-sublevel')\nvar net       = require('net')\nvar Replicate = require('level-replicate')\n\n//setup the database.\nvar db = SubLevel(level('/tmp/example-master'))\n\n//install Master plugin!\nvar master = Replicate(db, 'master', \"MASTER-1\")\n\n//create a server, and stream data to who ever connects.\nnet.createServer(function (stream) {\n  stream.pipe(master.createStream({tail: true})).pipe(stream)\n}).listen(9999, function () {\n  console.log('master db listening on 9999')\n})\n```\n\nThen, the code for the client!\n\n``` js\n//master2.js\nvar levelup   = require('level')\nvar SubLevel  = require('level-sublevel')\nvar net       = require('net')\nvar Replicate = require('level-replicate')\n\nvar db = SubLevel(level('/tmp/example-slave'))\nvar master = Replicate(db, 'master', \"MASTER-2\")\n\nvar stream = net.connect(9999)\n\nstream.pipe(master.createStream({tail: true})).pipe(stream)\n```\n\nWow, that was simple.\n\n## Binary data.\n\nby default, level-replicate supports buffers by converting them to base64 via `stream-serializer` and `json-buffer`.\nIf you desire more efficiency, use `level-replicate/msgpack`\n\n``` js\nvar Replicate = require('level-replicate/msgpack')\n\nvar db = SubLevel(level('/tmp/example-slave'))\nvar master = Replicate(db, 'master', \"MASTER-2\")\n\n\n```\n\n<!--\n\n## did someone say \"webscale\"?\n\n### master in the middle\n\nwrites go to the master, and are then copied to many slaves.\nrequests are load balanced across the slaves...\n\n### slave in the middle\n\nA large amount of data is written to many masters.\nEach master aggregates the data (probably with a module like\n[map-reduce](https://github.com/dominictarr/map-reduce)),\nand then the _aggregation_ is replicated into the central slave.\n\nThe central slave the applies the same aggregation _again_,\ngiving you global data.\n\n(it's important here that the data from each node does not collide.\nkeys from each node need a different prefix or to be stored in a\nseparate [sublevel](https://github.com/dominictarr/level-sublevel))\n\n-->\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dominictarr/level-replicate/issues"
  },
  "_id": "level-replicate@1.1.6",
  "dist": {
    "shasum": "ded86b60734a9f4ab2e1e91d1dfdcae52ca8544f"
  },
  "_from": "level-replicate@~1.1.0",
  "_resolved": "https://registry.npmjs.org/level-replicate/-/level-replicate-1.1.6.tgz"
}
