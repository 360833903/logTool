{
  "name": "doorknob",
  "version": "0.0.1",
  "description": "convenience module for adding Mozilla Persona user login + LevelDB based session storage to node web apps",
  "main": "index.js",
  "scripts": {
    "test": "browserify www/index.js -o www/bundle.js && node test.js",
    "start": "node server.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/maxogden/doorknob.git"
  },
  "author": {
    "name": "max ogden"
  },
  "license": "BSD",
  "dependencies": {
    "levelup": "~0.9.0",
    "persona-id": "0.0.3"
  },
  "devDependencies": {
    "browser-request": "~0.2.1",
    "ecstatic": "~0.4.5",
    "browserify": "~2.18.1"
  },
  "readme": "# doorknob\n\nconvenience module for adding Mozilla Persona user login + LevelDB based session storage to node web apps\n\nUses [levelup](http://github.com/rvagg/node-levelup) for storing sessions and [Mozilla Persona](https://login.persona.org/about) (via the [persona-id](http://github.com/substack/persona-id) module) for user sign-on.\n\n## get it on npm\n\n```\nnpm install doorknob\n```\n\n## test it out locally\n\n1. clone this repo\n2. npm install\n3. npm test\n4. open localhost:8080\n\n## API\n\n### require + make an instance\n\n```js\nvar doorknob = require('doorknob')(audience || options)\n```\n\nreturns a function that you can use to authenticate requests and responses, e.g. `function(req, res) {}`\n\narguments:\n\n- if you just pass a string it has to be the persona audience URL (default is http://localhost:8080)\n- options gets passed to the levelup constructor internally\n- by default `valueEncoding` is set to `json` but you can override that\n- you can also pass in your own levelup instance (or technically anything with the same API) via `options.db`\n- after initializing, `doorknob.db` is the levelup instance (or the db object you passed in)\n\n### handle a request/response\n\n```js\nrequire('http').createServer(function(req, res) {\n  doorknob(req, res, function(err, profile) {\n    if (profile.loggingIn) // the request has been handled by persona\n    if (profile.email) // the user is logged in\n    else // the user is not logged in\n  })\n}).listen(8080)\n```\n\n## license\n\nBSD",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/maxogden/doorknob/issues"
  },
  "_id": "doorknob@0.0.1",
  "dist": {
    "shasum": "864755b0832726e7c68284f00fd08a4217fe9db6"
  },
  "_from": "doorknob@0.0.1",
  "_resolved": "https://registry.npmjs.org/doorknob/-/doorknob-0.0.1.tgz"
}
